<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Enhanced Post Processing Tool (EPPT) Copyright (c) 2019.
  ~
  ~ EPPT is copyrighted by the State of California, Department of Water Resources. It is licensed
  ~ under the GNU General Public License, version 2. This means it can be
  ~ copied, distributed, and modified freely, but you may not restrict others
  ~ in their ability to copy, distribute, and modify it. See the license below
  ~ for more details.
  ~
  ~ GNU General Public License
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>gov.ca.water</groupId>
		<artifactId>eppt-parent</artifactId>
		<version>1.2.2-SNAPSHOT</version>
		<relativePath>../eppt-parent</relativePath>
	</parent>

	<artifactId>eppt-app</artifactId>
	<packaging>nbm-application</packaging>

	<name>EPPT Application</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<all.clusters>${project.build.directory}/${brandingToken}</all.clusters>
		<zip-dist-name>DWR-EPPT</zip-dist-name>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.netbeans.cluster</groupId>
			<artifactId>platform</artifactId>
			<version>${netbeans.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>eppt-branding</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>eppt-ui</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>eppt-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>eppt-jasper-engine</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>eppt-trend-reporting</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- NbModuleSuite functional in RELEASE70 or later: -->
		<dependency>
			<groupId>org.netbeans.api</groupId>
			<artifactId>org-netbeans-modules-nbjunit</artifactId>
			<version>${netbeans.version}</version>
			<scope>test
			</scope> <!-- beyond platform cluster, this often needs to be dropped down to compile/runtime, some other modules in IDE clusters depend on it -->
		</dependency>
		<!-- To use Jelly Tools in your functional tests, add or replace with:
		<dependency>
			<groupId>org.netbeans.api</groupId>
			<artifactId>org-netbeans-modules-jellytools-platform</artifactId>
			<version>${netbeans.version}</version>
			<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>eppt-nbui</artifactId>
			<version>${project.version}</version>
			<type>nbm</type>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
			<version>2.5.6</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.netbeans.utilities</groupId>
				<artifactId>nbm-maven-plugin</artifactId>
				<version>4.5</version>
				<extensions>true</extensions>
				<configuration>
					<finalName>${zip-dist-name}</finalName>
					<brandingToken>${brandingToken}</brandingToken>
					<debugAdditionalArguments>
						-J"-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5164" -J-Xmx2g
					</debugAdditionalArguments>
				</configuration>
			</plugin>
			<!-- Permits NbModuleSuite to be run in integration-test phase: -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.2</version>
				<configuration>
					<systemPropertyVariables>
						<all.clusters>${all.clusters}</all.clusters>
						<branding.token>${brandingToken}</branding.token>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>deployment</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>3.1.1</version>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>compile</phase>
								<goals>
									<goal>copy</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<artifactItems>
								<artifactItem>
									<groupId>oracle</groupId>
									<artifactId>jre</artifactId>
									<version>1.8.0_202-b34</version>
									<type>zip</type>
									<destFileName>jre.zip</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.netbeans.utilities</groupId>
						<artifactId>nbm-maven-plugin</artifactId>
						<version>4.5</version>
						<executions>
							<execution>
								<id>extra</id>
								<goals>
									<goal>standalone-zip</goal>
									<goal>run-platform</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<installersFilePrefix>${zip-dist-name}-${maven.build.timestamp}</installersFilePrefix>
							<installerOsLinux>false</installerOsLinux>
							<installerOsMacosx>false</installerOsMacosx>
							<installerOsSolaris>false</installerOsSolaris>
							<installerPack200Enable>true</installerPack200Enable>
							<installerOsWindows>false</installerOsWindows>
							<userSettings>
								<configuration.logic.file>
									${basedir}/src/installer/ConfigurationLogic.java
								</configuration.logic.file>
								<nbi.instleftcorner.file>${basedir}/src/installer/ilc.png</nbi.instleftcorner.file>
							</userSettings>
							<templateFile>${basedir}/src/installer/template.xml</templateFile>
							<etcConfFile>src/nbproject/eppt.conf</etcConfFile>
							<brandingToken>${brandingToken}</brandingToken>
							<binDirectory>${basedir}/src/installer/binaries</binDirectory>
							<licenseFile>${basedir}/src/nbproject/license.txt</licenseFile>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>parse-version</id>
								<goals>
									<goal>parse-version</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>copy-resource-one</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<unzip src="${project.build.directory}\jre.zip" dest="${project.build.directory}\dwr_eppt\jre"/>
										<copy file="${project.basedir}/src/EPPT.exe" todir="${project.build.directory}\dwr_eppt"/>
										<copy file="${project.basedir}/src/EPPT.config" todir="${project.build.directory}\dwr_eppt"/>
										<copy file="${project.basedir}/src/RunEppt.jar" todir="${project.build.directory}\dwr_eppt\bin"/>
										<copy todir="${project.build.directory}\${zip-dist-name}-${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}-${maven.build.timestamp}">
											<fileset dir="${project.build.directory}\dwr_eppt"/>
										</copy>
										<exec executable="cmd">
											<arg value="/c"/>
											<arg value="C:\Program Files\7-Zip\7z.exe"/>
											<arg value="a"/>
											<arg value="-sfx"/>
											<arg value="${project.build.directory}\${zip-dist-name}-${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}-${maven.build.timestamp}.exe"/>
											<arg value="${project.build.directory}\${zip-dist-name}-${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}-${maven.build.timestamp}"/>
										</exec>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
